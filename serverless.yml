service: sls-rest

provider:
  name: aws
  runtime: python3.6
  region: eu-central-1
  stage: ${opt:stage, 'dev'}
  timeout: 15
  environment:
    BUCKET:
      Ref: S3BucketState
    ATHENA_BUCKET:
      Ref: S3AthenaResultBucket
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
          - "*"
    - Effect: "Allow"
      Action:
        - "glue:*"
      Resource:
          - "*"
    - Effect: "Allow"
      Action:
        - "athena:*"
      Resource:
          - "*"

package:
  exclude:
    - venv/**
    - node_modules/**
functions:
  app:
    handler: wsgi.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
  user_get:
    handler: user.get
    events:
      - http:
          path: user/{id}
          method: GET
  user_post:
    handler: user.post
    events:
      - http:
          path: user
          method: POST
  user_delete:
    handler: user.delete
    events:
      - http:
          path: user/{id}
          method: DELETE
  user_put:
    handler: user.put
    events:
      - http:
          path: user/{id}
          method: PUT
  user_list:
    handler: user.all
    events:
      - http:
          path: user/list
          method: GET
  user_init_athena_schema:
    handler: user.init_schema
  book_init_athena_schema:
    handler: app.init_schema

resources:
  Resources:
    S3BucketState:
      Type: AWS::S3::Bucket
    S3AthenaResultBucket:
      Type: AWS::S3::Bucket

custom:
  pythonRequirements:
    dockerizePip: True
  wsgi:
    app: app.app
    packRequirements: false

plugins:
  - serverless-python-requirements
  - serverless-wsgi
